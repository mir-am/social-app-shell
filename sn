#!/bin/bash

# This is a social network app that is developed for edX Unix course 
# Author: Amir Mir (s.a.m.mir@tudelft.nl)
# Date: May, 2020


# Functions definitions #############################################
function create_social_network() {
        mkdir -p "./networks/$1";
        mkdir -p "./networks/$1/posts";
        touch "./networks/$1/members";
        printf "Created the network %s at %s\n" "$1" "./networks/$1";
}

function create_user() {
    mkdir -p "./users/$(whoami)"
    # A file to track networks that a user joined
    touch "./users/$(whoami)/networks"
    # A file to track people whom a user follows
    touch "./users/$(whoami)/following"
    printf "The user %s is created on the system. Welcome!\n" "$(whoami)"
}

function join_social_network() {
    if is_joined_network "$1"; then
        printf "You've already joined the network %s\n" "$1";
    else
        printf "%s\n" "$(whoami)" >> "./networks/$1/members";
        printf "%s\n" "$1" >> "./users/$(whoami)/networks"; 
        printf "Joined the social network %s.\n" "$1";
    fi
}

function leave_social_network() {
    if is_joined_network "$1"; then
        awk -v u="$(whoami)"  '{!/^u$/}' "networks/$1/members" > "networks/$1/temp" && mv "networks/$1/temp" "networks/$1/members";
        awk -v n="$1" '{!/^n$/}' "users/$(whoami)/networks" > "users/$(whoami)/temp" && mv "users/$(whoami)/temp" "users/$(whoami)/networks";
        printf "You left the network %s\n" "$1";
    else
        printf "You have not joined the network %s\n" "$1";
    fi
}

function show_network_members() {
    printf "The members of the social network %s are as follows:\n" "$1";
    cat "networks/$1/members";
}

function post_new_story() {
    read -rp "Enter the name of the network: " network_name;
    if can_user_post "$network_name"; then
        read -rp "Enter title of your post: " post_title;
        printf "Writer your post below and hit ctrl-d when done: \n";
        post_content=$(cat)

        # Here, the post title should be converted to a valid file name.
        post_file_title="$(convert_post_title "$post_title")";
        printf "Network: %s\nTitle: %s\nAuthor: %s\nDate: %s\n-----------------------\n%s" "$network_name" "$post_title" "$(whoami)" "$(date)" "$post_content" > "networks/$1/posts/$post_file_title";
        printf "Your post was succesfully written to %s\n" "networks/$1/posts/$post_file_title";
    fi
}

function can_user_post() {
    # Checks whether the user can post on a soical network or not
    if check_network_exists "$1"; then
        if is_joined_network "$1"; then
            return 0;
        fi
    fi
    return 1;
}

function check_network_exists() {
    if [[ -d "networks/$1" ]]; then
        return 0;
    else
        printf "The network %s doesn't exist!\n" "$1"
        return 1;
    fi
}

function check_user_exists() {
    if [[ -d "./users/$(whoami)" ]]; then
        printf "Welcome %s!\n" "$(whoami)"
        return 0;
    else
        return 1;
    fi
}

function show_existing_posts() {
    printf "List of existing posts:\n";
    for n in users/$(whoami)/network; do
        for p in "networks/$n/posts"/*; do
            < "$p" grep 'Title: ' | cut -d ":" -f 2;
        done
    done
}

function convert_post_title() {
    # Converts the title of a post to a valid name that can be saved on the disk
    return "$(echo "$1" | tr " " "_" | tr '[:upper:]' '[:lower:]')"
}

function is_joined_network() {
    if grep -q "$(whoami)" "./networks/$1/members" && grep -q "$1" "./users/$(whoami)/networks"; then
        return 0;
    else
        printf "You have not joined the network %s yet!\n" "$1";
        return 1;
    fi
}

#####################################################################

function main() {

    if [[ $# -eq 0 ]]; then
        printf "No arguments passed.\npass help to see the avialable options.\n"
        exit 1
    else

        if ! check_user_exists; then
            create_user;
        fi

        if [[ $1 = "create" ]]; then
            if check_network_exists "$2"; then
                printf "The network %s already exists!\n" "$2";
            else
                create_social_network "$2";
            fi
        elif [[ $1 = "join" ]]; then
            if check_network_exists "$2"; then
                join_social_network "$2";
            else
                printf "The network %s doesn't exist!\n" "$1"
            fi
        elif [[ $1 = "leave" ]]; then
            if check_network_exists "$2"; then
                leave_social_network "$2";
            else
                printf "The network %s doesn't exist!\n" "$1"
            fi
        elif [[ $1 = "pull" ]]; then
            echo "Pulling new posts and likes"
        elif [[ $1 = "log" ]]; then
            if check_network_exists "$2" && is_joined_network "$2"; then
                 show_existing_posts "$2";
            fi
        elif [[ $1 = "show" ]]; then
            echo " Showing the post $2"
        elif [[ $1 = "post" ]]; then
            if check_network_exists "$2"; then
                post_new_story "$2";
            fi
        elif [[ $1 = "like" ]]; then
            echo "You liked the post $2"
        elif [[ $1 = "push" ]]; then 
            echo "Pushing local changes back to the server"
        elif [[ $1 = "members" ]]; then
            show_network_members "$2";
        elif [[ $1 = "follow" ]]; then
            echo "Followed the posts of the member $2"
        elif [[ $1 = "unfollow" ]]; then
            echo "Unfollowed the posts of the member $2"
        else
            printf "%s is not a recongnized command.\nUse help option to see the description of the available commands.\n" "$1"
        fi
    fi
}

main "$@"